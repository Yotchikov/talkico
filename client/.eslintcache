[{"/Users/a18557590/Desktop/talkico/client/src/index.js":"1","/Users/a18557590/Desktop/talkico/client/src/reportWebVitals.js":"2","/Users/a18557590/Desktop/talkico/client/src/App.js":"3","/Users/a18557590/Desktop/talkico/client/src/routes.js":"4","/Users/a18557590/Desktop/talkico/client/src/pages/Auth.js":"5","/Users/a18557590/Desktop/talkico/client/src/pages/Room.js":"6","/Users/a18557590/Desktop/talkico/client/src/pages/CreateRoom.js":"7","/Users/a18557590/Desktop/talkico/client/src/hooks/auth.hook.js":"8","/Users/a18557590/Desktop/talkico/client/src/context/AuthContext.js":"9","/Users/a18557590/Desktop/talkico/client/src/hooks/http.hook.js":"10","/Users/a18557590/Desktop/talkico/client/src/components/Navbar.js":"11"},{"size":547,"mtime":1611846012938,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":1610885131710,"results":"14","hashOfConfig":"13"},{"size":548,"mtime":1611686791951,"results":"15","hashOfConfig":"13"},{"size":794,"mtime":1611862951907,"results":"16","hashOfConfig":"13"},{"size":2025,"mtime":1611937983932,"results":"17","hashOfConfig":"13"},{"size":2677,"mtime":1611863070929,"results":"18","hashOfConfig":"13"},{"size":346,"mtime":1611862753053,"results":"19","hashOfConfig":"13"},{"size":774,"mtime":1611686552148,"results":"20","hashOfConfig":"13"},{"size":195,"mtime":1611671501055,"results":"21","hashOfConfig":"13"},{"size":902,"mtime":1611680617218,"results":"22","hashOfConfig":"13"},{"size":673,"mtime":1611849980366,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"142v4np",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"/Users/a18557590/Desktop/talkico/client/src/index.js",[],["48","49"],"/Users/a18557590/Desktop/talkico/client/src/reportWebVitals.js",[],"/Users/a18557590/Desktop/talkico/client/src/App.js",[],"/Users/a18557590/Desktop/talkico/client/src/routes.js",[],"/Users/a18557590/Desktop/talkico/client/src/pages/Auth.js",["50","51","52"],"/Users/a18557590/Desktop/talkico/client/src/pages/Room.js",["53","54","55"],"import { useEffect, useRef, useState } from 'react';\nimport io from 'socket.io-client';\nimport { v4 as uuid } from 'uuid';\nimport Peer from 'peerjs';\nimport { withRouter } from 'react-router-dom';\n\nconst Video = (props) => {\n  const ref = useRef();\n  useEffect(() => {\n    props.peer.on('stream', (stream) => {\n      ref.current.srcObject = stream;\n    });\n  }, []);\n};\n\nexport const Room = withRouter((props) => {\n  const roomId = props.match.params.roomId;\n  const myId = uuid();\n  const socketRef = useRef();\n  const myVideoRef = useRef();\n  const [peers, setPeers] = useState([]);\n\n  useEffect(() => {\n    socketRef.current = io.connect('/');\n    navigator.mediaDevices\n      .getUserMedia({ video: true, audio: true })\n      .then((myStream) => {\n        myVideoRef.current.srcObject = myStream;\n        socketRef.current.emit('join-room', roomId, myId);\n\n        // Подклюячается новый пользователь\n        socketRef.current.on('user-connected', (userId) => {\n          // Создаем новый peer\n          const peer = new Peer(undefined, { host: '/', port: '3001' });\n          peer.on('open', (peerId) => {\n            // Посылаем свой peerId пользователю userId\n            socketRef.current.emit('send-signal', peerId, userId);\n            // При поступлении звонка от пользователя userId отправляем свой медиапоток\n            peer.on('call', (call) => {\n              call.answer(myStream);\n              setPeers((peers) => [...peers, call]);\n            });\n          });\n        });\n\n        // Мы подключились и получили peerId от отправителя\n        socketRef.current.on('return-signal', (senderId, receiverId) => {\n          // Если пытаются связаться с нами\n          if (receiverId == myId) {\n            // Создаем новый peer\n            const peer = new Peer(undefined, { host: '/', port: '3001' });\n            peer.on('open', () => {\n              // Звоним пользователю senderId\n              const call = peer.call(senderId, myStream);\n              setPeers((peers) => [...peers, call]);\n            });\n          }\n        });\n\n        // Пользователь отключился\n        socketRef.current.on('user-disconnected', (userId) => {\n          // TODO\n        });\n      });\n  }, []);\n\n  return (\n    <div>\n      <h6>You are in room {roomId}</h6>\n      <video muted playsInLine autoPlay ref={myVideoRef} />\n      {peers.map((peer, index) => {\n        return <Video key={index} peer={peer} />;\n      })}\n    </div>\n  );\n});\n","/Users/a18557590/Desktop/talkico/client/src/pages/CreateRoom.js",[],"/Users/a18557590/Desktop/talkico/client/src/hooks/auth.hook.js",[],"/Users/a18557590/Desktop/talkico/client/src/context/AuthContext.js",[],"/Users/a18557590/Desktop/talkico/client/src/hooks/http.hook.js",[],"/Users/a18557590/Desktop/talkico/client/src/components/Navbar.js",[],{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":1,"column":29,"nodeType":"62","messageId":"63","endLine":1,"endColumn":38},{"ruleId":"60","severity":1,"message":"64","line":8,"column":20,"nodeType":"62","messageId":"63","endLine":8,"endColumn":25},{"ruleId":"60","severity":1,"message":"65","line":8,"column":27,"nodeType":"62","messageId":"63","endLine":8,"endColumn":37},{"ruleId":"66","severity":1,"message":"67","line":13,"column":6,"nodeType":"68","endLine":13,"endColumn":8,"suggestions":"69"},{"ruleId":"70","severity":1,"message":"71","line":49,"column":26,"nodeType":"72","messageId":"73","endLine":49,"endColumn":28},{"ruleId":"66","severity":1,"message":"74","line":65,"column":6,"nodeType":"68","endLine":65,"endColumn":8,"suggestions":"75"},"no-native-reassign",["76"],"no-negated-in-lhs",["77"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'error' is assigned a value but never used.","'clearError' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.peer'. Either include it or remove the dependency array.","ArrayExpression",["78"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'myId' and 'roomId'. Either include them or remove the dependency array.",["79"],"no-global-assign","no-unsafe-negation",{"desc":"80","fix":"81"},{"desc":"82","fix":"83"},"Update the dependencies array to be: [props.peer]",{"range":"84","text":"85"},"Update the dependencies array to be: [myId, roomId]",{"range":"86","text":"87"},[362,364],"[props.peer]",[2196,2198],"[myId, roomId]"]