[{"/Users/a18557590/Desktop/talkico/client/src/index.js":"1","/Users/a18557590/Desktop/talkico/client/src/reportWebVitals.js":"2","/Users/a18557590/Desktop/talkico/client/src/App.js":"3","/Users/a18557590/Desktop/talkico/client/src/routes.js":"4","/Users/a18557590/Desktop/talkico/client/src/context/AuthContext.js":"5","/Users/a18557590/Desktop/talkico/client/src/hooks/auth.hook.js":"6","/Users/a18557590/Desktop/talkico/client/src/components/Loading.js":"7","/Users/a18557590/Desktop/talkico/client/src/components/Navbar.js":"8","/Users/a18557590/Desktop/talkico/client/src/pages/CreateRoom.js":"9","/Users/a18557590/Desktop/talkico/client/src/pages/Auth.js":"10","/Users/a18557590/Desktop/talkico/client/src/pages/Room.js":"11","/Users/a18557590/Desktop/talkico/client/src/hooks/http.hook.js":"12","/Users/a18557590/Desktop/talkico/client/src/hooks/peer.hook.js":"13"},{"size":547,"mtime":1611846012938,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":1610885131710,"results":"16","hashOfConfig":"15"},{"size":707,"mtime":1611941130162,"results":"17","hashOfConfig":"15"},{"size":648,"mtime":1611940034314,"results":"18","hashOfConfig":"15"},{"size":195,"mtime":1611671501055,"results":"19","hashOfConfig":"15"},{"size":847,"mtime":1611941030010,"results":"20","hashOfConfig":"15"},{"size":66,"mtime":1611941090742,"results":"21","hashOfConfig":"15"},{"size":693,"mtime":1611939348974,"results":"22","hashOfConfig":"15"},{"size":346,"mtime":1611940092887,"results":"23","hashOfConfig":"15"},{"size":2045,"mtime":1611938900745,"results":"24","hashOfConfig":"15"},{"size":941,"mtime":1612863141158,"results":"25","hashOfConfig":"15"},{"size":902,"mtime":1611680617218,"results":"26","hashOfConfig":"15"},{"size":2157,"mtime":1612866106227,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"142v4np",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},"/Users/a18557590/Desktop/talkico/client/src/index.js",[],["58","59"],"/Users/a18557590/Desktop/talkico/client/src/reportWebVitals.js",[],"/Users/a18557590/Desktop/talkico/client/src/App.js",[],"/Users/a18557590/Desktop/talkico/client/src/routes.js",[],"/Users/a18557590/Desktop/talkico/client/src/context/AuthContext.js",[],"/Users/a18557590/Desktop/talkico/client/src/hooks/auth.hook.js",[],"/Users/a18557590/Desktop/talkico/client/src/components/Loading.js",[],"/Users/a18557590/Desktop/talkico/client/src/components/Navbar.js",[],"/Users/a18557590/Desktop/talkico/client/src/pages/CreateRoom.js",[],"/Users/a18557590/Desktop/talkico/client/src/pages/Auth.js",["60","61","62"],"import React, { useContext, useEffect, useState } from 'react';\nimport { AuthContext } from '../context/AuthContext';\nimport { useHttp } from '../hooks/http.hook';\n\nexport const Auth = () => {\n  const auth = useContext(AuthContext);\n  const [form, setForm] = useState({ email: '', password: '' });\n  const { loading, error, clearError, request } = useHttp();\n\n  const handleInput = (e) => {\n    setForm({ ...form, [e.target.name]: e.target.value.replace(/\\s/g, '') });\n  };\n\n  const handleLogin = async (e) => {\n    try {\n      e.preventDefault();\n      const data = await request('/api/auth/login', 'POST', { ...form });\n      auth.login(data.token, data.userId);\n    } catch (e) {\n      alert(e.message);\n    }\n  };\n\n  const handleRegister = async (e) => {\n    try {\n      e.preventDefault();\n      const data = await request('/api/auth/register', 'POST', { ...form });\n      alert(data.message);\n    } catch (e) {\n      alert(e.message);\n    }\n  };\n\n  return (\n    <form className=\"m-3\">\n      <div className=\"form-group\">\n        <label htmlFor=\"email\">Email</label>\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          value={form.email}\n          name=\"email\"\n          aria-describedby=\"emailHelp\"\n          placeholder=\"Email\"\n          onChange={handleInput}\n        />\n      </div>\n      <div className=\"form-group\">\n        <label htmlFor=\"password\">Пароль</label>\n        <input\n          type=\"password\"\n          className=\"form-control\"\n          value={form.password}\n          name=\"password\"\n          placeholder=\"Пароль\"\n          onChange={handleInput}\n        />\n      </div>\n      <button\n        type=\"submit\"\n        className=\"btn btn-success mr-3\"\n        onClick={handleLogin}\n        disabled={loading}\n      >\n        Войти\n      </button>\n      <button\n        type=\"submit\"\n        className=\"btn btn-outline-success\"\n        onClick={handleRegister}\n        disabled={loading}\n      >\n        Зарегистрироваться\n      </button>\n    </form>\n  );\n};\n","/Users/a18557590/Desktop/talkico/client/src/pages/Room.js",["63","64","65"],"import { useEffect, useRef, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { usePeer } from '../hooks/peer.hook';\n\nconst Video = (props) => {\n  const ref = useRef();\n  useEffect(() => {\n    props.peer.on('stream', (stream) => {\n      ref.current.srcObject = stream;\n    });\n  }, []);\n};\n\nexport const Room = () => {\n  const roomId = useParams().id;\n  const peer = usePeer(roomId);\n  const peers = peer.myPeers;\n  const myVideoRef = useRef();\n\n  useEffect(() => {\n    navigator.mediaDevices\n      .getUserMedia({ video: true, audio: true })\n      .then((myStream) => {\n        myVideoRef.current.srcObject = myStream;\n        peer.initialize(myStream);\n      });\n  }, []);\n\n  return (\n    <div>\n      <h6>You are in room {roomId}</h6>\n      <video muted playsInLine autoPlay ref={myVideoRef} />\n      {peers.map((peers, index) => {\n        return <Video key={index} peer={peer} />;\n      })}\n    </div>\n  );\n};\n","/Users/a18557590/Desktop/talkico/client/src/hooks/http.hook.js",[],"/Users/a18557590/Desktop/talkico/client/src/hooks/peer.hook.js",["66","67"],"import { useRef, useState } from 'react';\nimport { io } from 'socket.io-client';\nimport { v4 as uuid } from 'uuid';\nimport Peer from 'peerjs';\n\nexport const usePeer = (roomId) => {\n  const socketRef = useRef();\n  const myId = uuid();\n  const [myPeers, setMyPeers] = useState([]);\n  const [isFull, setIsFull] = useState(false);\n\n  const initialize = (myStream) => {\n    socketRef.current = io.connect('/');\n\n    // Текущий пользователь заходит в комнату roomId\n    socketRef.current.emit('join-room', roomId, myId);\n\n    // Комната roomId полна\n    socketRef.current.on('room-full', () => {\n      setIsFull(true);\n    });\n\n    // Подключается другой пользователь\n    socketRef.current.on('user-connected', (userId) => {\n      // Создаем новый peer\n      const peer = new Peer(undefined, { host: '/', port: '3001' });\n      peer.on('open', (peerId) => {\n        // Посылаем свой peerId пользователю userId\n        socketRef.current.emit('send-signal', peerId, userId);\n        // При поступлении звонка от пользователя userId отправляем свой медиапоток\n        peer.on('call', (call) => {\n          call.answer(myStream);\n          setMyPeers((myPeers) => [...myPeers, call]);\n        });\n      });\n    });\n\n    // Мы подключились и получили peerId от отправителя\n    socketRef.current.on('return-signal', (senderId, receiverId) => {\n      // Если пытаются связаться с нами\n      if (receiverId == myId) {\n        // Создаем новый peer\n        const peer = new Peer(undefined, { host: '/', port: '3001' });\n        peer.on('open', () => {\n          // Звоним пользователю senderId\n          const call = peer.call(senderId, myStream);\n          setMyPeers((myPeers) => [...myPeers, call]);\n        });\n      }\n    });\n\n    // Пользователь отключился\n    socketRef.current.on('user-disconnected', (userId) => {\n      // TODO\n    });\n  };\n\n  return { myPeers, initialize };\n};\n",{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":1,"column":29,"nodeType":"74","messageId":"75","endLine":1,"endColumn":38},{"ruleId":"72","severity":1,"message":"76","line":8,"column":20,"nodeType":"74","messageId":"75","endLine":8,"endColumn":25},{"ruleId":"72","severity":1,"message":"77","line":8,"column":27,"nodeType":"74","messageId":"75","endLine":8,"endColumn":37},{"ruleId":"72","severity":1,"message":"78","line":1,"column":29,"nodeType":"74","messageId":"75","endLine":1,"endColumn":37},{"ruleId":"79","severity":1,"message":"80","line":11,"column":6,"nodeType":"81","endLine":11,"endColumn":8,"suggestions":"82"},{"ruleId":"79","severity":1,"message":"83","line":27,"column":6,"nodeType":"81","endLine":27,"endColumn":8,"suggestions":"84"},{"ruleId":"72","severity":1,"message":"85","line":10,"column":10,"nodeType":"74","messageId":"75","endLine":10,"endColumn":16},{"ruleId":"86","severity":1,"message":"87","line":41,"column":22,"nodeType":"88","messageId":"89","endLine":41,"endColumn":24},"no-native-reassign",["90"],"no-negated-in-lhs",["91"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'error' is assigned a value but never used.","'clearError' is assigned a value but never used.","'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.peer'. Either include it or remove the dependency array.","ArrayExpression",["92"],"React Hook useEffect has a missing dependency: 'peer'. Either include it or remove the dependency array.",["93"],"'isFull' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"94","fix":"95"},{"desc":"96","fix":"97"},"Update the dependencies array to be: [props.peer]",{"range":"98","text":"99"},"Update the dependencies array to be: [peer]",{"range":"100","text":"101"},[310,312],"[props.peer]",[698,700],"[peer]"]