[{"/Users/a18557590/Desktop/talkico/client/src/index.js":"1","/Users/a18557590/Desktop/talkico/client/src/reportWebVitals.js":"2","/Users/a18557590/Desktop/talkico/client/src/App.js":"3","/Users/a18557590/Desktop/talkico/client/src/routes.js":"4","/Users/a18557590/Desktop/talkico/client/src/pages/Auth.js":"5","/Users/a18557590/Desktop/talkico/client/src/pages/Room.js":"6","/Users/a18557590/Desktop/talkico/client/src/pages/CreateRoom.js":"7","/Users/a18557590/Desktop/talkico/client/src/hooks/auth.hook.js":"8","/Users/a18557590/Desktop/talkico/client/src/context/AuthContext.js":"9","/Users/a18557590/Desktop/talkico/client/src/hooks/http.hook.js":"10","/Users/a18557590/Desktop/talkico/client/src/components/Navbar.js":"11"},{"size":547,"mtime":1611846012938,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":1610885131710,"results":"14","hashOfConfig":"13"},{"size":548,"mtime":1611686791951,"results":"15","hashOfConfig":"13"},{"size":794,"mtime":1611849630882,"results":"16","hashOfConfig":"13"},{"size":1725,"mtime":1611686763699,"results":"17","hashOfConfig":"13"},{"size":2618,"mtime":1611086919247,"results":"18","hashOfConfig":"13"},{"size":255,"mtime":1611078097538,"results":"19","hashOfConfig":"13"},{"size":774,"mtime":1611686552148,"results":"20","hashOfConfig":"13"},{"size":195,"mtime":1611671501055,"results":"21","hashOfConfig":"13"},{"size":902,"mtime":1611680617218,"results":"22","hashOfConfig":"13"},{"size":673,"mtime":1611849980366,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"142v4np",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/a18557590/Desktop/talkico/client/src/index.js",[],"/Users/a18557590/Desktop/talkico/client/src/reportWebVitals.js",[],["49","50"],"/Users/a18557590/Desktop/talkico/client/src/App.js",[],"/Users/a18557590/Desktop/talkico/client/src/routes.js",[],"/Users/a18557590/Desktop/talkico/client/src/pages/Auth.js",["51","52","53"],"import React, { useContext, useEffect, useState } from 'react';\nimport { AuthContext } from '../context/AuthContext';\nimport { useHttp } from '../hooks/http.hook';\n\nexport const Auth = () => {\n  const auth = useContext(AuthContext);\n  const [form, setForm] = useState({ email: '', password: '' });\n  const { loading, error, clearError, request } = useHttp();\n\n  const handleInput = (e) => {\n    setForm({ ...form, [e.target.name]: e.target.value });\n    console.log(form);\n  };\n\n  const handleLogin = async (e) => {\n    try {\n      e.preventDefault();\n      const data = await request('/api/auth/login', 'POST', { ...form });\n      auth.login(data.token, data.userId)\n    } catch (e) {\n      alert(e.message);\n    }\n  };\n\n  const handleRegister = async (e) => {\n    try {\n      e.preventDefault();\n      const data = await request('/api/auth/register', 'POST', { ...form });\n      alert(data.message);\n    } catch (e) {\n      alert(e.message);\n    }\n  };\n\n  return (\n    <div>\n      <h1>Auth Page</h1>\n      <form>\n        <label for=\"email\">Email</label>\n        <input\n          type=\"text\"\n          placeholder=\"email\"\n          name=\"email\"\n          onChange={handleInput}\n          disabled={loading}\n          required\n        />\n\n        <label for=\"password\">Password</label>\n        <input\n          type=\"password\"\n          placeholder=\"password\"\n          name=\"password\"\n          onChange={handleInput}\n          disabled={loading}\n          required\n        />\n\n        <button type=\"submit\" onClick={handleLogin}>\n          Войти\n        </button>\n        <button type=\"submit\" onClick={handleRegister}>\n          Зарегистрироваться\n        </button>\n      </form>\n    </div>\n  );\n};\n","/Users/a18557590/Desktop/talkico/client/src/pages/Room.js",["54","55","56"],"import { useEffect, useRef, useState } from 'react';\nimport io from 'socket.io-client';\nimport { v4 as uuid } from 'uuid';\nimport Peer from 'peerjs';\n\nconst Video = (props) => {\n  const ref = useRef();\n  useEffect(() => {\n    props.peer.on('stream', (stream) => {\n      ref.current.srcObject = stream;\n    });\n  }, []);\n};\n\nexport const Room = (props) => {\n  const roomId = props.match.params.roomId;\n  const myId = uuid();\n  const socketRef = useRef();\n  const myVideoRef = useRef();\n  const [peers, setPeers] = useState([]);\n\n  useEffect(() => {\n    socketRef.current = io.connect('/');\n    navigator.mediaDevices\n      .getUserMedia({ video: true, audio: true })\n      .then((myStream) => {\n        myVideoRef.current.srcObject = myStream;\n        socketRef.current.emit('join-room', roomId, myId);\n\n        // Подклюячается новый пользователь\n        socketRef.current.on('user-connected', (userId) => {\n          // Создаем новый peer\n          const peer = new Peer(undefined, { host: '/', port: '3001' });\n          peer.on('open', (peerId) => {\n            // Посылаем свой peerId пользователю userId\n            socketRef.current.emit('send-signal', peerId, userId);\n            // При поступлении звонка от пользователя userId отправляем свой медиапоток\n            peer.on('call', (call) => {\n              call.answer(myStream);\n              setPeers((peers) => [...peers, call]);\n            });\n          });\n        });\n\n        // Мы подключились и получили peerId от отправителя\n        socketRef.current.on('return-signal', (senderId, receiverId) => {\n          // Если пытаются связаться с нами\n          if (receiverId == myId) {\n            // Создаем новый peer\n            const peer = new Peer(undefined, { host: '/', port: '3001' });\n            peer.on('open', () => {\n              // Звоним пользователю senderId\n              const call = peer.call(senderId, myStream);\n              setPeers((peers) => [...peers, call]);\n            });\n          }\n        });\n\n        // Пользователь отключился\n        socketRef.current.on('user-disconnected', (userId) => {\n          // TODO\n        });\n      });\n  }, []);\n\n  return (\n    <div>\n      <h6>You are in romm {roomId}</h6>\n      <video muted playsInLine autoPlay ref={myVideoRef} />\n      {peers.map((peer, index) => {\n        return <Video key={index} peer={peer} />;\n      })}\n    </div>\n  );\n};\n","/Users/a18557590/Desktop/talkico/client/src/pages/CreateRoom.js",[],"/Users/a18557590/Desktop/talkico/client/src/hooks/auth.hook.js",[],"/Users/a18557590/Desktop/talkico/client/src/context/AuthContext.js",[],"/Users/a18557590/Desktop/talkico/client/src/hooks/http.hook.js",[],"/Users/a18557590/Desktop/talkico/client/src/components/Navbar.js",[],{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":1,"column":29,"nodeType":"63","messageId":"64","endLine":1,"endColumn":38},{"ruleId":"61","severity":1,"message":"65","line":8,"column":20,"nodeType":"63","messageId":"64","endLine":8,"endColumn":25},{"ruleId":"61","severity":1,"message":"66","line":8,"column":27,"nodeType":"63","messageId":"64","endLine":8,"endColumn":37},{"ruleId":"67","severity":1,"message":"68","line":12,"column":6,"nodeType":"69","endLine":12,"endColumn":8,"suggestions":"70"},{"ruleId":"71","severity":1,"message":"72","line":48,"column":26,"nodeType":"73","messageId":"74","endLine":48,"endColumn":28},{"ruleId":"67","severity":1,"message":"75","line":64,"column":6,"nodeType":"69","endLine":64,"endColumn":8,"suggestions":"76"},"no-native-reassign",["77"],"no-negated-in-lhs",["78"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'error' is assigned a value but never used.","'clearError' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.peer'. Either include it or remove the dependency array.","ArrayExpression",["79"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'myId' and 'roomId'. Either include them or remove the dependency array.",["80"],"no-global-assign","no-unsafe-negation",{"desc":"81","fix":"82"},{"desc":"83","fix":"84"},"Update the dependencies array to be: [props.peer]",{"range":"85","text":"86"},"Update the dependencies array to be: [myId, roomId]",{"range":"87","text":"88"},[315,317],"[props.peer]",[2138,2140],"[myId, roomId]"]